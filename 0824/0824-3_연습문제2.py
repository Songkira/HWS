# p = 1 # 처음 줄 설 사람 번호
#
# q = []
# N = 20 # 초기 마이쮸 개수
# m = 0 # 나눠준 개수
# v = 0
#
# while m<N:
#     input()
#     q.append((p, 1, 0))     # 처음 줄 서는 사람, 몇개를 받아가는 지의 수, 나눠준 마이쮸의 갯수
#     print(q)
#     v, c, my = q.pop(0)
#     print(f'큐에 있는 사람수 {len(q)+1}, 받아갈 사탕수{c}, 나눠준 누적된 사탕 수 {m}')
#     m += c
#     q.append((v, c+1, my+c)) # c:줄선 횟수, my + c: 줄선 횟수만큼 받아간 마이쮸 개수 / 마이쮸를 받고 다시 서는 사람
#     p += 1                  # 처음 줄서는 사람 번호
# print(f'마지막 받은 사람 : {v}')
# [(1, 1, 0)]
# 큐에 있는 사람수 1, 받아갈 사탕수1, 나눠준 누적된 사탕 수 0
#
# [(1, 2, 1), (2, 1, 0)]
# 큐에 있는 사람수 2, 받아갈 사탕수2, 나눠준 누적된 사탕 수 1
#
# [(2, 1, 0), (1, 3, 3), (3, 1, 0)]
# 큐에 있는 사람수 3, 받아갈 사탕수1, 나눠준 누적된 사탕 수 3
#
# [(1, 3, 3), (3, 1, 0), (2, 2, 1), (4, 1, 0)]
# 큐에 있는 사람수 4, 받아갈 사탕수3, 나눠준 누적된 사탕 수 4
#
# [(3, 1, 0), (2, 2, 1), (4, 1, 0), (1, 4, 6), (5, 1, 0)]
# 큐에 있는 사람수 5, 받아갈 사탕수1, 나눠준 누적된 사탕 수 7
#
# [(2, 2, 1), (4, 1, 0), (1, 4, 6), (5, 1, 0), (3, 2, 1), (6, 1, 0)]
# 큐에 있는 사람수 6, 받아갈 사탕수2, 나눠준 누적된 사탕 수 8
#
# [(4, 1, 0), (1, 4, 6), (5, 1, 0), (3, 2, 1), (6, 1, 0), (2, 3, 3), (7, 1, 0)]
# 큐에 있는 사람수 7, 받아갈 사탕수1, 나눠준 누적된 사탕 수 10
#
# [(1, 4, 6), (5, 1, 0), (3, 2, 1), (6, 1, 0), (2, 3, 3), (7, 1, 0), (4, 2, 1), (8, 1, 0)]
# 큐에 있는 사람수 8, 받아갈 사탕수4, 나눠준 누적된 사탕 수 11
#
# [(5, 1, 0), (3, 2, 1), (6, 1, 0), (2, 3, 3), (7, 1, 0), (4, 2, 1), (8, 1, 0), (1, 5, 10), (9, 1, 0)]
# 큐에 있는 사람수 9, 받아갈 사탕수1, 나눠준 누적된 사탕 수 15
#
# [(3, 2, 1), (6, 1, 0), (2, 3, 3), (7, 1, 0), (4, 2, 1), (8, 1, 0), (1, 5, 10), (9, 1, 0), (5, 2, 1), (10, 1, 0)]
# 큐에 있는 사람수 10, 받아갈 사탕수2, 나눠준 누적된 사탕 수 16
#
# [(6, 1, 0), (2, 3, 3), (7, 1, 0), (4, 2, 1), (8, 1, 0), (1, 5, 10), (9, 1, 0), (5, 2, 1), (10, 1, 0), (3, 3, 3), (11, 1, 0)]
# 큐에 있는 사람수 11, 받아갈 사탕수1, 나눠준 누적된 사탕 수 18
#
# [(2, 3, 3), (7, 1, 0), (4, 2, 1), (8, 1, 0), (1, 5, 10), (9, 1, 0), (5, 2, 1), (10, 1, 0), (3, 3, 3), (11, 1, 0), (6, 2, 1), (12, 1, 0)]
# 큐에 있는 사람수 12, 받아갈 사탕수3, 나눠준 누적된 사탕 수 19
# 마지막 받은 사람 : 2

#-----------------------------------------------
# deque 를 사용할려면?
from collections import deque
p = 1 # 처음 줄 설 사람 번호

# q = []
q = deque()
N = 1000000 # 초기 마이쮸 개수
m = 0 # 나눠준 개수
v = 0

while m<N:
    # input()
    q.append((p, 1, 0))     # 처음 줄 서는 사람, 몇개를 받아가는 지의 수, 나눠준 마이쮸의 갯수
    # print(q)
    v, c, my = q.popleft()
    # print(f'큐에 있는 사람수 {len(q)+1}, 받아갈 사탕수{c}, 나눠준 누적된 사탕 수 {m}')
    m += c
    q.append((v, c+1, my+c)) # c:줄선 횟수, my + c: 줄선 횟수만큼 받아간 마이쮸 개수 / 마이쮸를 받고 다시 서는 사람
    p += 1                  # 처음 줄서는 사람 번호
print(f'마지막 받은 사람 : {v}')
# 마지막 받은 사람 : 62501
# 위 코드 보다 속도가 빨라짐